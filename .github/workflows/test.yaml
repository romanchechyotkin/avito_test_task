name: testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Build
        run: |
          go mod tidy
          go build ./...

      - name: Test
        run: CGO_ENABLED=1 go test ./... -v -race -tags=unit

  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 5432
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Build
        run: |
          go mod tidy
          go build ./...

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Print current directory
        run: pwd

      - name: List files
        run: ls -la

      - name: Test
        env:
          CONFIG_PATH: ./avito_test_task/config.yaml
          PG_USER: postgres
        run: |
          echo "Using CONFIG_PATH: $CONFIG_PATH"
          ls -la ./avito_test_task/
          # Your test command here

      - name: Test
        env:
          CONFIG_PATH: ./avito_test_task/config.yaml
          PG_USER: postgres
          PG_PASSWORD: 5432
          PG_HOST: postgres
          PG_PORT: 5432
          PG_DATABASE: postgres
          PG_SSL: disable
          PG_AUTO_CREATE: true
        run: |
          echo "Using CONFIG_PATH: $CONFIG_PATH"
          CGO_ENABLED=1 go test ./... -v -race -tags=integration

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Build
        run: |
          go mod tidy
          go build ./...

      - name: Generate test coverage
        env:
          CONFIG_PATH: config.yaml
          PG_USER: postgres
          PG_PASSWORD: 5432
          PG_HOST: postgres
          PG_PORT: 5432
          PG_DATABASE: postgres
          PG_SSL: disable
          PG_AUTO_CREATE: true
        run: |
          echo "Using CONFIG_PATH: $CONFIG_PATH"
          go test -coverprofile=cover.out -covermode=atomic -v -coverpkg=./... -tags=unit,integration ./...

      - name: Check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: cover.out
          local-prefix: "github.com/github.com/romanchechyotkin/avito_test_task"
          git-token: ${{ github.ref_name == 'master' && secrets.TOKEN || '' }}
          git-branch: badges

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            cover.out
          if-no-files-found: error
          retention-days: 1