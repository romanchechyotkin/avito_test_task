name: testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Build
        run: |
          go mod tidy
          go build ./...

      - name: Test
        run: CGO_ENABLED=1 go test ./... -v -race -tags=unit

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Build
        run: |
          go mod tidy
          go build ./...

      - name: Test
        run: CGO_ENABLED=1 go test ./... -v -race -tags=integration


  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Build
        run: |
          go mod tidy
          go build ./...

      - name: Generate test coverage
        run:
          go test -coverprofile=cover.out -covermode=atomic -v -coverpkg=./... -tags=unit,integration ./...

      - name: Check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: cover.out
          local-prefix: "github.com/github.com/romanchechyotkin/avito_test_task"
          git-token: ${{ github.ref_name == 'master' && secrets.TOKEN || '' }}
          git-branch: badges

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            cover.out
          if-no-files-found: error
          retention-days: 1